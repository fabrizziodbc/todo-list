{"ast":null,"code":"var _jsxFileName = \"/root/personalProjects/todo-list/src/library/common/Components/TodoContext/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/React.createContext();\nconst prueba = [1, 2, 3];\n\nfunction TodoProvider(props) {\n  _s();\n\n  const {\n    todos,\n    saveTodos,\n    loading\n  } = useLocalStorage(\"TODOS_V1\", []);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [modal, setModal] = React.useState(false);\n  const totalTodos = todos.length;\n  const completedTodos = todos.filter(t => t.completed === true).length;\n  let todoSearchbox = [];\n\n  if (!searchValue >= 1) {\n    todoSearchbox = todos;\n  } else {\n    todoSearchbox = todos.filter(t => {\n      const searchLower = searchValue.toLowerCase();\n      const todosLower = t.text.toLowerCase();\n      return todosLower.includes(searchLower);\n    });\n  }\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  const submitTask = text => {\n    todoSearchbox.push({\n      text: text,\n      completed: false\n    });\n    saveTodos(todoSearchbox);\n    toggleModal();\n  };\n\n  const completeTodos = text => {\n    const todoIndex = todos.findIndex(t => t.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodos = text => {\n    const todoIndex = todos.findIndex(t => t.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      loading,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue,\n      todoSearchbox,\n      deleteTodos,\n      completeTodos,\n      modal,\n      setModal,\n      toggleModal,\n      submitTask,\n      prueba\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoProvider, \"SCCmCXrHM8c8X5tbav9VmdcDQN4=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoProvider;\nexport { TodoContext, TodoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/root/personalProjects/todo-list/src/library/common/Components/TodoContext/index.js"],"names":["React","useLocalStorage","TodoContext","createContext","prueba","TodoProvider","props","todos","saveTodos","loading","searchValue","setSearchValue","useState","modal","setModal","totalTodos","length","completedTodos","filter","t","completed","todoSearchbox","searchLower","toLowerCase","todosLower","text","includes","toggleModal","submitTask","push","completeTodos","todoIndex","findIndex","newTodos","deleteTodos","splice","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = React.createContext();\nconst prueba = [1, 2, 3];\nfunction TodoProvider(props) {\n  const { todos, saveTodos, loading } = useLocalStorage(\"TODOS_V1\", []);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [modal, setModal] = React.useState(false);\n  const totalTodos = todos.length;\n  const completedTodos = todos.filter((t) => t.completed === true).length;\n\n  let todoSearchbox = [];\n  if (!searchValue >= 1) {\n    todoSearchbox = todos;\n  } else {\n    todoSearchbox = todos.filter((t) => {\n      const searchLower = searchValue.toLowerCase();\n      const todosLower = t.text.toLowerCase();\n      return todosLower.includes(searchLower);\n    });\n  }\n  const toggleModal = () =>{\n    setModal(!modal)\n  }\n  const submitTask = (text) => {\n    todoSearchbox.push({ text: text, completed: false });\n    saveTodos(todoSearchbox);\n    toggleModal();\n  };\n  const completeTodos = (text) => {\n    const todoIndex = todos.findIndex((t) => t.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n    saveTodos(newTodos);\n  };\n  const deleteTodos = (text) => {\n    const todoIndex = todos.findIndex((t) => t.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        todoSearchbox,\n        deleteTodos,\n        completeTodos,\n        modal,\n        setModal,\n        toggleModal,\n        submitTask,\n        prueba\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\nexport { TodoContext, TodoProvider };\n"]},"metadata":{},"sourceType":"module"}