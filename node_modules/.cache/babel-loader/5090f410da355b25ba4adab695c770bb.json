{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\n\nfunction useLocalStorage(itemName, InitialValue) {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [errorLS, setErrorLS] = React.useState(false);\n  const [item, setItem] = React.useState(InitialValue);\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (localStorageItem) {\n          parsedItem = JSON.parse(localStorageItem);\n        } else {\n          localStorage.setItem(itemName, JSON.stringify(InitialValue));\n          parsedItem = InitialValue;\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setErrorLS(error);\n      }\n    }, 1000);\n  }, []);\n\n  const saveTodos = newItem => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setErrorLS(error);\n    }\n  };\n\n  return {\n    todos: item,\n    saveTodos,\n    loading\n  };\n}\n\n_s(useLocalStorage, \"lOt6I5lcdsszMVL5Lq8Hs0lXkXg=\");\n\nexport { useLocalStorage };","map":{"version":3,"sources":["/root/personalProjects/todo-list/src/library/common/Components/TodoContext/useLocalStorage.js"],"names":["React","useLocalStorage","itemName","InitialValue","loading","setLoading","useState","errorLS","setErrorLS","item","setItem","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","parse","stringify","error","saveTodos","newItem","stringifiedItem","todos"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiD;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAeH,YAAf,CAAxB;AAEAH,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAI;AACF,cAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqBb,QAArB,CAAzB;AACA,YAAIc,UAAJ;;AACA,YAAIH,gBAAJ,EAAsB;AACpBG,UAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,gBAAX,CAAb;AACD,SAFD,MAEO;AACLC,UAAAA,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+Be,IAAI,CAACE,SAAL,CAAehB,YAAf,CAA/B;AACAa,UAAAA,UAAU,GAAGb,YAAb;AACD;;AACDO,QAAAA,OAAO,CAACM,UAAD,CAAP;AACAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAXD,CAWE,OAAOe,KAAP,EAAc;AACdZ,QAAAA,UAAU,CAACY,KAAD,CAAV;AACD;AACF,KAfS,EAeP,IAfO,CAAV;AAgBD,GAjBD,EAiBG,EAjBH;;AAmBA,QAAMC,SAAS,GAAIC,OAAD,IAAa;AAC7B,QAAI;AACF,YAAMC,eAAe,GAAGN,IAAI,CAACE,SAAL,CAAeG,OAAf,CAAxB;AACAR,MAAAA,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+BqB,eAA/B;AACAb,MAAAA,OAAO,CAACY,OAAD,CAAP;AACD,KAJD,CAIE,OAAOF,KAAP,EAAc;AACdZ,MAAAA,UAAU,CAACY,KAAD,CAAV;AACD;AACF,GARD;;AASA,SAAO;AACLI,IAAAA,KAAK,EAAEf,IADF;AAELY,IAAAA,SAFK;AAGLjB,IAAAA;AAHK,GAAP;AAKD;;GAtCQH,e;;AAwCT,SAASA,eAAT","sourcesContent":["import React from \"react\";\nfunction useLocalStorage(itemName, InitialValue) {\n  const [loading, setLoading] = React.useState(true);\n  const [errorLS, setErrorLS] = React.useState(false);\n  const [item, setItem] = React.useState(InitialValue);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        if (localStorageItem) {\n          parsedItem = JSON.parse(localStorageItem);\n        } else {\n          localStorage.setItem(itemName, JSON.stringify(InitialValue));\n          parsedItem = InitialValue;\n        }\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setErrorLS(error);\n      }\n    }, 1000);\n  }, []);\n\n  const saveTodos = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setErrorLS(error);\n    }\n  };\n  return {\n    todos: item,\n    saveTodos,\n    loading,\n  };\n}\n\nexport { useLocalStorage };\n"]},"metadata":{},"sourceType":"module"}